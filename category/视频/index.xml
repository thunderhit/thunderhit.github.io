<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>视频 | Thunderhit</title>
    <link>https://thunderhit.github.io/category/%E8%A7%86%E9%A2%91/</link>
      <atom:link href="https://thunderhit.github.io/category/%E8%A7%86%E9%A2%91/index.xml" rel="self" type="application/rss+xml" />
    <description>视频</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh-Hans</language><lastBuildDate>Fri, 19 Jun 2020 18:12:27 +0800</lastBuildDate>
    <image>
      <url>https://thunderhit.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>视频</title>
      <link>https://thunderhit.github.io/category/%E8%A7%86%E9%A2%91/</link>
    </image>
    
    <item>
      <title>半小时学会Markdown标记语法</title>
      <link>https://thunderhit.github.io/post/typora%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E5%85%8D%E8%B4%B9markdown%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Fri, 19 Jun 2020 18:12:27 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/typora%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E5%85%8D%E8%B4%B9markdown%E8%BD%AF%E4%BB%B6/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#n级标题&#34;&gt;N级标题&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#this-is-an-h1&#34;&gt;This is an H1&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#this-is-an-h2&#34;&gt;This is an H2&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#this-is-an-h3&#34;&gt;This is an H3&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#加粗斜体&#34;&gt;加粗、斜体&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#高亮&#34;&gt;高亮&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#下划线&#34;&gt;下划线&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#删除线&#34;&gt;删除线&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#引用&#34;&gt;引用&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#列表&#34;&gt;列表&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#有序列表&#34;&gt;有序列表&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#无序列表&#34;&gt;无序列表&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#代码块&#34;&gt;代码块&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#表格&#34;&gt;表格&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#超链接&#34;&gt;超链接&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#插入图片&#34;&gt;插入图片&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#任务清单&#34;&gt;任务清单&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#数学公式&#34;&gt;数学公式&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#mermaid图表&#34;&gt;mermaid图表&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;p&gt;学习编程的过程需要敲大量代码，遇到很多错误，好脑子不如烂笔头，能一边敲代码一边做笔记，学起来事倍功半，今天分享大家一个做笔记的工具软件Typora。&lt;/p&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV1vC4y1a727&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;br&gt;
&lt;h2 id=&#34;n级标题&#34;&gt;N级标题&lt;/h2&gt;
&lt;p&gt;一个&lt;code&gt;#&lt;/code&gt;就是一个级，最多支持六级标题。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# This is an H1

## This is an H2

### This is an H3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下&lt;/p&gt;
&lt;h1 id=&#34;this-is-an-h1&#34;&gt;This is an H1&lt;/h1&gt;
&lt;h2 id=&#34;this-is-an-h2&#34;&gt;This is an H2&lt;/h2&gt;
&lt;h3 id=&#34;this-is-an-h3&#34;&gt;This is an H3&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;加粗斜体&#34;&gt;加粗、斜体&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;**加粗的文本**
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;加粗的文本&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*斜体文本*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;斜体文本&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;高亮&#34;&gt;高亮&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;==highlight==
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;==highlight==&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;下划线&#34;&gt;下划线&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;u&amp;gt;下划线内容&amp;lt;/u&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;u&gt;下划线内容&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;删除线&#34;&gt;删除线&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt; ~~Mistaken text.~~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;del&gt;Mistaken text.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;引用&#34;&gt;引用&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;列表&#34;&gt;列表&lt;/h2&gt;
&lt;h3 id=&#34;有序列表&#34;&gt;有序列表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ordered list:
1.  Red
2. 	Green
3.	Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ordered list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Red&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Green&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blue&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    注意&lt;code&gt;.&lt;/code&gt;之后留一个空格再书写内容
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;h3 id=&#34;无序列表&#34;&gt;无序列表&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;un-ordered list:
- Red
- Green
- Blue
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下&lt;/p&gt;
&lt;p&gt;un-ordered list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Red&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Green&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blue&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    注意&lt;code&gt;.&lt;/code&gt;之后同样留一个空格再书写内容
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码块&#34;&gt;代码块&lt;/h2&gt;
&lt;p&gt;一般情况下，word等office软件不支持代码高亮，且存储代码容易乱行。以typora为首的markdown语法完美支持各种代码，这里以Python代码为例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;​```python
import requests
url = &#39;https://www.baidu.com/&#39;
resp = requests.get(url)
​```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
url = &#39;https://www.baidu.com/&#39;
resp = requests.get(url)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;表格&#34;&gt;表格&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;| First Column  | Second Column |
| ------------- | ------------- |
| Content Cell1  | Content Cell2  |
| Content Cell3  | Content Cell4  |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Column&lt;/th&gt;
&lt;th&gt;Second Column&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell1&lt;/td&gt;
&lt;td&gt;Content Cell2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell3&lt;/td&gt;
&lt;td&gt;Content Cell4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;超链接&#34;&gt;超链接&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;[百度](https://www.baidu.com/)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.baidu.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;百度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;插入图片&#34;&gt;插入图片&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;![](图片文件路径或网址)

![](https://thunderhit.github.io/post/hugo/featured_hu9a15b8275a5635099198061a5e2dc1dd_3029870_720x0_resize_lanczos_2.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thunderhit.github.io/post/hugo/featured_hu9a15b8275a5635099198061a5e2dc1dd_3029870_720x0_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;任务清单&#34;&gt;任务清单&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;某日任务清单
- [x] 6点起床
- [ ] 步数达到10000步
- [x] 读一小时书
- [x] 日消费不超过50元
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 6点起床&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 步数达到10000步&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 读一小时书&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 日消费不超过50元&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;数学公式&#34;&gt;数学公式&lt;/h2&gt;
&lt;p&gt;在markdown中用&lt;code&gt;$&lt;/code&gt;夹住Latex公式表达式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$\lim_{x \to \infty} \exp(-x) = 0$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果如下&lt;/p&gt;
&lt;p&gt;$\lim_{x \to \infty} \exp(-x) = 0$&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;mermaid图表&#34;&gt;mermaid图表&lt;/h2&gt;
&lt;p&gt;Typora中可以绘制流程图、序列图、状态图、甘特图、饼形图、类图等，这里以流程图为例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;​```mermaid
graph LR
	A--&amp;gt;B
	B--&amp;gt;C
	C--&amp;gt;D
​```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph LR
	A--&amp;gt;B
	B--&amp;gt;C
	C--&amp;gt;D
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更多mermaid可以看&lt;br&gt;
&lt;a href=&#34;https://thunderhit.github.io/post/mermaid/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在Markdown中用mermaid语法绘制图表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家点赞分享和红包^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac电脑Python环境配置</title>
      <link>https://thunderhit.github.io/post/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEmac/</link>
      <pubDate>Fri, 19 Jun 2020 16:41:32 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEmac/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#mac环境配置&#34;&gt;Mac环境配置&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#软件包下载&#34;&gt;软件包下载&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#一python安装&#34;&gt;一、Python安装&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#命令行打开的方法&#34;&gt;命令行打开的方法&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#二pip3设置&#34;&gt;二、pip3设置&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#21-更改pip3镜像&#34;&gt;2.1 更改pip3镜像&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#22-使用方法&#34;&gt;2.2 使用方法&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#三jupyter-notebook&#34;&gt;三、Jupyter notebook&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#31-安装&#34;&gt;3.1 安装&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#32-调用&#34;&gt;3.2 调用&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#33-常用快捷键&#34;&gt;3.3 常用快捷键&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#四tips&#34;&gt;四、Tips&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h1 id=&#34;mac环境配置&#34;&gt;Mac环境配置&lt;/h1&gt;
&lt;h2 id=&#34;软件包下载&#34;&gt;软件包下载&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    链接:https://pan.baidu.com/s/1tbgGBcAnYSMZXp80F0nM1Q  密码:t307
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV1zg4y1q7H6&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;br&gt;
&lt;h2 id=&#34;一python安装&#34;&gt;一、Python安装&lt;/h2&gt;
&lt;p&gt;官网  &lt;a href=&#34;https://www.python.org/&#34;&gt;https://www.python.org/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    mac自带python2，为了与python2区别，凡是在命令行中使用pip和python，我们都要加上3。
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;安装成功的标准是==命令行可以调用python3==&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;命令行打开的方法&#34;&gt;命令行打开的方法&lt;/h3&gt;
&lt;p&gt;==command+空格== 启动  ==聚焦搜索Spotlight==，再输入terminal&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二pip3设置&#34;&gt;二、pip3设置&lt;/h2&gt;
&lt;p&gt;pip3是python的命令行安装工具，可以帮我们安装第三方库。&lt;/p&gt;
&lt;h3 id=&#34;21-更改pip3镜像&#34;&gt;2.1 更改pip3镜像&lt;/h3&gt;
&lt;p&gt;为了保证安装的速度和成功率，命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip3 config set global.index-url https://mirrors.aliyun.com/pypi/simple/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;22-使用方法&#34;&gt;2.2 使用方法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pip3 install packagename
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三jupyter-notebook&#34;&gt;三、Jupyter notebook&lt;/h2&gt;
&lt;h3 id=&#34;31-安装&#34;&gt;3.1 安装&lt;/h3&gt;
&lt;p&gt;命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip3 install jupyter
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;32-调用&#34;&gt;3.2 调用&lt;/h3&gt;
&lt;p&gt;命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;33-常用快捷键&#34;&gt;3.3 常用快捷键&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;jupyter内快捷键&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ESC+A（ESC+B）&lt;/td&gt;
&lt;td&gt;当前单元格上(下)新建一个新的Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D+D&lt;/td&gt;
&lt;td&gt;删除当前单元格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift+Enter&lt;/td&gt;
&lt;td&gt;执行单元格内的Python代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESC+M&lt;/td&gt;
&lt;td&gt;单元格由代码模式转为Markdown标记模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Markdown语法特别好用，强烈建议学习，顺便安装一个Typora软件
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四tips&#34;&gt;四、Tips&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    环境配置太难，而且有时候电脑还会出现一些视频里出现不了的问题。这时不妨在==淘宝==搜&lt;strong&gt;python环境配置&lt;/strong&gt;，寻找一对一远程协助
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;../../img/%E6%B7%98%E5%AE%9D.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows电脑Python环境配置</title>
      <link>https://thunderhit.github.io/post/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEwin/</link>
      <pubDate>Fri, 19 Jun 2020 16:39:11 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AEwin/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#win环境配置&#34;&gt;Win环境配置&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#软件包下载&#34;&gt;软件包下载&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#一python安装&#34;&gt;一、Python安装&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#安装注意事项&#34;&gt;安装注意事项&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#二pip配置&#34;&gt;二、pip配置&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#21-更改pip镜像&#34;&gt;2.1 更改pip镜像&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#22-使用方法&#34;&gt;2.2 使用方法&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#三jupyter-notebook&#34;&gt;三、Jupyter notebook&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#31-安装&#34;&gt;3.1 安装&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#32-调用&#34;&gt;3.2 调用&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#33-常用快捷键&#34;&gt;3.3 常用快捷键&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#四tips&#34;&gt;四、Tips&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h1 id=&#34;win环境配置&#34;&gt;Win环境配置&lt;/h1&gt;
&lt;h2 id=&#34;软件包下载&#34;&gt;软件包下载&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    链接:https://pan.baidu.com/s/1tbgGBcAnYSMZXp80F0nM1Q  密码:t307
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV1zg4y1q7H6&amp;page=2&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;br&gt;
&lt;h2 id=&#34;一python安装&#34;&gt;一、Python安装&lt;/h2&gt;
&lt;p&gt;官网  &lt;a href=&#34;https://www.python.org/&#34;&gt;https://www.python.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装注意事项&#34;&gt;安装注意事项&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;推荐选择3.7.5.  最新的bug比较多&lt;/li&gt;
&lt;li&gt;==选择&lt;strong&gt;Install Now&lt;/strong&gt;默认安装方式==&lt;/li&gt;
&lt;li&gt;勾选&lt;strong&gt;Add Python 3.x to PATH&lt;/strong&gt;，这样命令行可以调用python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二pip配置&#34;&gt;二、pip配置&lt;/h2&gt;
&lt;p&gt;pip是python的命令行安装工具，可以帮我们安装第三方库。&lt;/p&gt;
&lt;h3 id=&#34;21-更改pip镜像&#34;&gt;2.1 更改pip镜像&lt;/h3&gt;
&lt;p&gt;为了保证安装的速度和成功率，命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;22-使用方法&#34;&gt;2.2 使用方法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pip install packagename
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三jupyter-notebook&#34;&gt;三、Jupyter notebook&lt;/h2&gt;
&lt;h3 id=&#34;31-安装&#34;&gt;3.1 安装&lt;/h3&gt;
&lt;p&gt;命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install jupyter
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;32-调用&#34;&gt;3.2 调用&lt;/h3&gt;
&lt;p&gt;命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;33-常用快捷键&#34;&gt;3.3 常用快捷键&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;jupyter内快捷键&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ESC+A（ESC+B）&lt;/td&gt;
&lt;td&gt;当前单元格上(下)新建一个新的Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D+D&lt;/td&gt;
&lt;td&gt;删除当前单元格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift+Enter&lt;/td&gt;
&lt;td&gt;执行单元格内的Python代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESC+M&lt;/td&gt;
&lt;td&gt;单元格由代码模式转为标记模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Markdown语法特别好用，强烈建议学习，顺便安装一个Typora软件
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四tips&#34;&gt;四、Tips&lt;/h2&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    环境配置太难，而且有时候电脑还会出现一些视频里出现不了的问题。这时不妨在==淘宝==搜&lt;strong&gt;python环境配置&lt;/strong&gt;，寻找一对一远程协助
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;../../img/%E6%B7%98%E5%AE%9D.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Hugo框架建立个人网站</title>
      <link>https://thunderhit.github.io/post/hugo/</link>
      <pubDate>Tue, 16 Jun 2020 17:31:20 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/hugo/</guid>
      <description>&lt;p&gt;在B站看到一位博主用Hugo制作个人博客的视频，感觉挺简单的，真的十几分钟就能看到云端出现自己的博客，当然了想让自己的博客更美观更炫酷，精雕细琢会花很多功夫。现在大家看到的效果，大邓用了一整天的时间，一点点修饰改动出来的。&lt;/p&gt;
&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#1-安装hugo&#34;&gt;1. 安装Hugo&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#2-新建hugo项目&#34;&gt;2. 新建Hugo项目&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#3-academic主题下载&#34;&gt;3. Academic主题下载&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#4-启动本地博客&#34;&gt;4. 启动本地博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#5-在本地新建一篇文章&#34;&gt;5. 在本地新建一篇文章&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#6-将本地博客部署到服务器&#34;&gt;6. 将本地博客部署到服务器&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#更多&#34;&gt;更多&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#实验代码下载&#34;&gt;实验代码下载&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#打赏&#34;&gt;打赏&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;1-安装hugo&#34;&gt;1. 安装Hugo&lt;/h1&gt;
&lt;p&gt;这里以&lt;strong&gt;Mac&lt;/strong&gt;为例，安装Hugo，命令行输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-新建hugo项目&#34;&gt;2. 新建Hugo项目&lt;/h1&gt;
&lt;p&gt;切换到桌面(我喜欢把项目放到桌面), 命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd desktop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建一个叫做&lt;strong&gt;MyBlog&lt;/strong&gt;的hugo项目文件夹，命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new site MyBlog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在可以在桌面看到一个MyBlog文件夹，接下来切换工作目录到MyBlog&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd MyBlog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;记者目前我们的命令行处于MyBlog的根目录 , 接下来下载网站主题&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-academic主题下载&#34;&gt;3. Academic主题下载&lt;/h1&gt;
&lt;p&gt;Hugo有很多主题，我选择的 &lt;a href=&#34;https://themes.gohugo.io/academic/&#34;&gt;https://themes.gohugo.io/academic/&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;在命令行逐行执行下方命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd themes

git clone https://github.com/gcushen/hugo-academic.git
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    我们可以在 &lt;strong&gt;MyBlog/themes&lt;/strong&gt; 看到多了一个 &lt;strong&gt;hugo-academic文件夹，把hugo-academic改为academic&lt;/strong&gt; ，现在网站已经建立好了~
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    这里切换回项目根目录MyBlog
  &lt;/div&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;命令行执行pwd，检查一下目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pwd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/Users/电脑用户名/desktop/MyBlog
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;4-启动本地博客&#34;&gt;4. 启动本地博客&lt;/h1&gt;
&lt;p&gt;现在我们以academic主题为例，启动博客&lt;/p&gt;
&lt;p&gt;命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server -t academic --buildDrafts
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    补充: t的意思是主题
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;执行后，在命令行中会提示我们&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://localhost:1313/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在浏览器中复制粘贴上方的链接，我们的Blog毛坯房搭建好了~&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;5-在本地新建一篇文章&#34;&gt;5. 在本地新建一篇文章&lt;/h1&gt;
&lt;p&gt;依旧是MyBlog根目录，命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new post/first-article.md
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    在MyBlog/content内新生成了一个post文件夹，并且post内有了一个first-article.md文件。
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;接下来就是在first-article.md内用markdown方式写内容即可。&lt;/p&gt;
&lt;p&gt;我们测试一下现在的网站,继续回到MyBlog根目录，命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server -t academic --buildDrafts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在浏览器中我们可以看到有First Ariticle的文章。&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;6-将本地博客部署到服务器&#34;&gt;6. 将本地博客部署到服务器&lt;/h1&gt;
&lt;p&gt;在github新建一个仓库，仓库名命名方式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;你的github用户名&amp;gt;.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;比如我的github账号名是thunderhit，那么仓库名为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;thunderhit.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在MyBlog根目录，命令行执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo --theme=academic --baseUrl=&#39;https://thunderhit.github.io/&#39; --buildDrafts
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    补充: 主题academic, 网站地址 &lt;code&gt;https://thunderhit.github.io/ &lt;/code&gt;，你们根据自己需要改成自己的仓库名
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;现在我们在MyBlog中多了一个public文件夹，其中有我们新建的文章内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绑定public与github仓库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;命令行切换到public目录，初始化git&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd public 
git init
git add .
git commit -m &#39;我的hugo博客第一次提交&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;把public与远程github仓库关联&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;依次执行（大家的github地址略微不同，需要改动一下)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote add origin git@github.com:thunderhit/thunderhit.github.io.git

git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;命令行上传完毕后，在浏览器网址栏打开链接 &lt;a href=&#34;https://thunderhit.github.io/&#34;&gt;https://thunderhit.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;就可以看到我们自己的博客了~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;featured.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;更多&#34;&gt;更多&lt;/h1&gt;
&lt;p&gt;如果大家想学仔细学Hugo，推荐大家看B站&lt;strong&gt;Up主：ianianying&lt;/strong&gt;的视频&lt;/p&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV1iA411v7Gi&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;实验代码下载&#34;&gt;实验代码下载&lt;/h1&gt;
&lt;p&gt;如果实验没成功，大家可以下载我的博客项目。项目资源获取方式，【公众号：大邓和他的Python】后台回复关键词&amp;rdquo;&lt;strong&gt;Hugo&lt;/strong&gt;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;打赏&#34;&gt;打赏&lt;/h1&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cntopic: 中文LDA话题模型</title>
      <link>https://thunderhit.github.io/post/cntopic/</link>
      <pubDate>Mon, 15 Jun 2020 17:31:20 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/cntopic/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#cntopic&#34;&gt;cntopic&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;安装&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;使用&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#1-读取文件&#34;&gt;1. 读取文件&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#2-准备数据&#34;&gt;2. 准备数据&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#3-训练lda模型&#34;&gt;3. 训练lda模型&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#4-使用lda模型&#34;&gt;4. 使用LDA模型&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#41-准备document&#34;&gt;4.1 准备document&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#42-预测document对应的话题&#34;&gt;4.2 预测document对应的话题&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#43-显示每种话题与对应的特征词之间关系&#34;&gt;4.3 显示每种话题与对应的特征词之间关系&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#44-话题分布情况&#34;&gt;4.4 话题分布情况&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#45-可视化功能不稳定&#34;&gt;4.5 可视化（功能不稳定）&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#五存储与导入lda模型&#34;&gt;五、存储与导入lda模型&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#如果&#34;&gt;如果&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#更多&#34;&gt;更多&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;cntopic&#34;&gt;cntopic&lt;/h1&gt;
&lt;p&gt;简单好用的lda话题模型，支持中英文。该库基于gensim和pyLDAvis，实现了lda话题模型及可视化功能。&lt;/p&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV1m54y1B7F9&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install cntopic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;这里给大家引入一个场景，假设大家采集新闻数据，忘记采集新闻文本对应的新闻类别，如果人工标注又很费工夫。这时候我们可以用lda话题模型帮我们洞察数据中的规律，发现新闻有n种话题群体。这样lda模型对数据自动打标注topic_1, topic_2, topic_3&amp;hellip; ,topic_n。&lt;/p&gt;
&lt;p&gt;我们研究者的工作量仅仅限于解读topic_1, topic_2, topic_3&amp;hellip; ,topic_n分别是什么话题即可。&lt;/p&gt;
&lt;p&gt;lda训练过程，大致分为&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取文件&lt;/li&gt;
&lt;li&gt;准备数据&lt;/li&gt;
&lt;li&gt;训练lda模型&lt;/li&gt;
&lt;li&gt;使用lda模型&lt;/li&gt;
&lt;li&gt;存储与导入lda模型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-读取文件&#34;&gt;1. 读取文件&lt;/h1&gt;
&lt;p&gt;这里我们用一个新闻数据,一共有10类，每类1000条数据，涵盖&lt;/p&gt;
&lt;p&gt;&amp;lsquo;时尚&amp;rsquo;, &amp;lsquo;财经&amp;rsquo;, &amp;lsquo;科技&amp;rsquo;, &amp;lsquo;教育&amp;rsquo;, &amp;lsquo;家居&amp;rsquo;, &amp;lsquo;体育&amp;rsquo;, &amp;lsquo;时政&amp;rsquo;, &amp;lsquo;游戏&amp;rsquo;, &amp;lsquo;房产&amp;rsquo;, &amp;lsquo;娱乐&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

df = pd.read_csv(&#39;chinese_news.csv&#39;)
df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;label&lt;/th&gt;
      &lt;th&gt;content&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;鲍勃库西奖归谁属？ NCAA最强控卫是坎巴还是弗神新浪体育讯如今，本赛季的NCAA进入到了末...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;麦基砍28+18+5却充满寂寞 纪录之夜他的痛阿联最懂新浪体育讯上天对每个人都是公平的，贾维...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;黄蜂vs湖人首发：科比冲击七连胜 火箭两旧将登场新浪体育讯北京时间3月28日，NBA常规赛洛...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;双面谢亚龙作秀终成做作 谁来为低劣行政能力埋单是谁任命了谢亚龙？谁放纵了谢亚龙？谁又该为谢亚...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;兔年首战山西换帅后有虎胆 张学文用乔丹名言励志今晚客场挑战浙江稠州银行队，是山西汾酒男篮的兔...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;label标签的分布情况&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;label&#39;].value_counts()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;家居    1000
时尚    1000
房产    1000
时政    1000
教育    1000
游戏    1000
财经    1000
娱乐    1000
体育    1000
科技    1000
Name: label, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-准备数据&#34;&gt;2. 准备数据&lt;/h1&gt;
&lt;p&gt;一般准备数据包括:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分词、数据清洗&lt;/li&gt;
&lt;li&gt;按照模块需求整理数据的格式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意在scikit-learn中:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;英文文本不需要分词，原封不动传入即可。&lt;/li&gt;
&lt;li&gt;中文文本需要先分词，后整理为英文那样用空格间隔的字符串。形如”我 爱 中国“&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import jieba

def text2tokens(raw_text):
    #将文本raw_text分词后得到词语列表
    tokens = jieba.lcut(raw_text)
    #tokens = raw_text.lower().split(&#39; &#39;) #英文用空格分词即可
    tokens = [t for t in tokens if len(t)&amp;gt;1] #剔除单字
    return tokens

#对content列中所有的文本依次进行分词
documents = [text2tokens(txt) 
             for txt in df[&#39;content&#39;]]  

#显示前5个document
print(documents[:5])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[[&#39;鲍勃&#39;, &#39;库西&#39;, &#39;奖归&#39;, &#39;NCAA&#39;, &#39;最强&#39;, &#39;控卫&#39;, &#39;坎巴&#39;, &#39;还是&#39;, &#39;弗神&#39;, &#39;新浪&#39;, &#39;体育讯&#39;, &#39;称赞&#39;, &#39;得分&#39;, &#39;能力&#39;, &#39;毋庸置疑&#39;,...],
[&#39;球员&#39;, &#39;大东&#39;, &#39;赛区&#39;, &#39;锦标赛&#39;, &#39;全国&#39;, &#39;锦标赛&#39;, &#39;他场&#39;, &#39;27.1&#39;, &#39;6.1&#39;, &#39;篮板&#39;, &#39;5.1&#39;, &#39;助攻&#39;,..],
[&#39;依旧&#39;, &#39;如此&#39;, &#39;给力&#39;, &#39;疯狂&#39;, &#39;表现&#39;, &#39;开始&#39;, &#39;这个&#39;, &#39;赛季&#39;, &#39;疯狂&#39;, &#39;表现&#39;, &#39;结束&#39;, &#39;这个&#39;, &#39;赛季&#39;, &#39;我们&#39;, &#39;全国&#39;, &#39;锦标赛&#39;, &#39;前进&#39;, &#39;并且&#39;, &#39;之前&#39;, &#39;曾经&#39;, &#39;连赢&#39;, &#39;赢得&#39;, &#39;大东&#39;, ...],
[&#39;赛区&#39;, &#39;锦标赛&#39;, &#39;冠军&#39;, &#39;这些&#39;, &#39;归功于&#39;, &#39;坎巴&#39;, &#39;沃克&#39;, &#39;康涅狄格&#39;, &#39;大学&#39;, &#39;主教练&#39;, &#39;吉姆&#39;, &#39;卡洪&#39;, ...],
[&#39;称赞&#39;, &#39;一名&#39;, &#39;纯正&#39;, &#39;控卫&#39;, &#39;而且&#39;, &#39;能为&#39;, &#39;我们&#39;, &#39;得分&#39;, &#39;单场&#39;, &#39;42&#39;, &#39;有过&#39;, &#39;单场&#39;, &#39;17&#39;, &#39;助攻&#39;, ...]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-训练lda模型&#34;&gt;3. 训练lda模型&lt;/h1&gt;
&lt;p&gt;现在开始正式使用cntopic模块，开启LDA话题模型分析。步骤包括&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;代码&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;准备documents，已经在前面准备好了&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;初始化Topic类&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic = Topic(cwd=os.getcwd())&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;根据documents数据，构建词典空间&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.create_dictionary(documents=documents)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;构建语料(将文本转为文档-词频矩阵)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.create_corpus(documents=documents)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指定n_topics，构建LDA话题模型&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.train_lda_model(n_topics)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里我们就按照n_topics=10构建lda话题模型，一般情况n_topics可能要实验多次，找到最佳的n_topics&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/test.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;运行过程中会在代码所在的文件夹内生成一个output文件夹，内部含有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dictionary.dict 词典文件&lt;/li&gt;
&lt;li&gt;lda.model.xxx 多个lda模型文件，其中xxx是代指&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;img/output.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/model.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述代码耗时较长，请耐心等待程序运行完毕~&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
from cntopic import Topic

topic = Topic(cwd=os.getcwd()) #构建词典dictionary
topic.create_dictionary(documents=documents) #根据documents数据，构建词典空间
topic.create_corpus(documents=documents) #构建语料(将文本转为文档-词频矩阵)
topic.train_lda_model(n_topics=10) #指定n_topics，构建LDA话题模型
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;gensim.models.ldamulticore.LdaMulticore at 0x158da5090&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-使用lda模型&#34;&gt;4. 使用LDA模型&lt;/h1&gt;
&lt;p&gt;上面的代码大概运行了5分钟，LDA模型已经训练好了。&lt;/p&gt;
&lt;p&gt;现在我们可以利用LDA做一些事情，包括&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;代码&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;补充&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;分词后的某文档&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;document = [&amp;lsquo;游戏&amp;rsquo;, &amp;lsquo;体育&amp;rsquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;预测document对应的话题&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.get_document_topics(document)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;显示每种话题与对应的特征词之间关系&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.show_topics()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;数据中不同话题分布情况&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.topic_distribution(raw_documents)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;raw_documents是列表或series，如本教程中的df[&amp;lsquo;content&amp;rsquo;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;可视化LDA话题模型（&lt;strong&gt;功能不稳定&lt;/strong&gt;）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.visualize_lda()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;可视化结果在output中查找vis.html文件，浏览器打开即可&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;41-准备document&#34;&gt;4.1 准备document&lt;/h2&gt;
&lt;p&gt;假设有一个文档 &lt;code&gt;&#39;游戏体育真有意思&#39;&lt;/code&gt; 分词处理得到document&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;document = jieba.lcut(&#39;游戏体育真有意思&#39;)
document
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;游戏&#39;, &#39;体育&#39;, &#39;真&#39;, &#39;有意思&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;42-预测document对应的话题&#34;&gt;4.2 预测document对应的话题&lt;/h2&gt;
&lt;p&gt;我们使用topic模型，看看document对应的话题&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.get_document_topics(document)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(0, 0.02501536),
 (1, 0.025016038),
 (2, 0.28541195),
 (3, 0.025018401),
 (4, 0.025018891),
 (5, 0.025017735),
 (6, 0.51443774),
 (7, 0.02502284),
 (8, 0.025015472),
 (9, 0.025025582)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们的lda话题模型是按照n_topics=10训练的，限制调用topic预测某个document时，得到的结果是这10种话题及对应概率的元组列表。&lt;/p&gt;
&lt;p&gt;从中可以看到概率最大的是 &lt;code&gt;话题6&lt;/code&gt;， 概率有0.51443774。&lt;/p&gt;
&lt;p&gt;所以我们可以大致认为document是话题6&lt;/p&gt;
&lt;h2 id=&#34;43-显示每种话题与对应的特征词之间关系&#34;&gt;4.3 显示每种话题与对应的特征词之间关系&lt;/h2&gt;
&lt;p&gt;但是仅仅告诉每个文档是 &lt;code&gt;话题n&lt;/code&gt;，我们仍然不知道 &lt;code&gt;话题n&lt;/code&gt;代表的是什么，所以我们需要看看每种 &lt;code&gt;话题n&lt;/code&gt;对应的 &lt;code&gt;特征词语&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.show_topics()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(0,
  &#39;0.042*&amp;quot;基金&amp;quot; + 0.013*&amp;quot;市场&amp;quot; + 0.011*&amp;quot;投资&amp;quot; + 0.009*&amp;quot;公司&amp;quot; + 0.005*&amp;quot;上涨&amp;quot; + 0.004*&amp;quot;股票&amp;quot; + 0.004*&amp;quot;房地产&amp;quot; + 0.004*&amp;quot;指数&amp;quot; + 0.004*&amp;quot;房价&amp;quot; + 0.004*&amp;quot;2008&amp;quot;&#39;),
 (1,
  &#39;0.010*&amp;quot;中国&amp;quot; + 0.007*&amp;quot;移民&amp;quot; + 0.006*&amp;quot;项目&amp;quot; + 0.005*&amp;quot;发展&amp;quot; + 0.005*&amp;quot;表示&amp;quot; + 0.005*&amp;quot;经济&amp;quot; + 0.005*&amp;quot;政府&amp;quot; + 0.005*&amp;quot;土地&amp;quot; + 0.004*&amp;quot;政策&amp;quot; + 0.004*&amp;quot;问题&amp;quot;&#39;),
 (2,
  &#39;0.014*&amp;quot;比赛&amp;quot; + 0.009*&amp;quot;他们&amp;quot; + 0.008*&amp;quot;球队&amp;quot; + 0.007*&amp;quot;篮板&amp;quot; + 0.006*&amp;quot;我们&amp;quot; + 0.005*&amp;quot;球员&amp;quot; + 0.005*&amp;quot;季后赛&amp;quot; + 0.005*&amp;quot;时间&amp;quot; + 0.005*&amp;quot;热火&amp;quot; + 0.005*&amp;quot;赛季&amp;quot;&#39;),
 (3,
  &#39;0.013*&amp;quot;我们&amp;quot; + 0.013*&amp;quot;一个&amp;quot; + 0.009*&amp;quot;自己&amp;quot; + 0.009*&amp;quot;这个&amp;quot; + 0.007*&amp;quot;没有&amp;quot; + 0.007*&amp;quot;他们&amp;quot; + 0.006*&amp;quot;可以&amp;quot; + 0.006*&amp;quot;就是&amp;quot; + 0.006*&amp;quot;很多&amp;quot; + 0.006*&amp;quot;记者&amp;quot;&#39;),
 (4,
  &#39;0.020*&amp;quot;电影&amp;quot; + 0.010*&amp;quot;导演&amp;quot; + 0.009*&amp;quot;微博&amp;quot; + 0.008*&amp;quot;影片&amp;quot; + 0.006*&amp;quot;观众&amp;quot; + 0.006*&amp;quot;一个&amp;quot; + 0.005*&amp;quot;自己&amp;quot; + 0.005*&amp;quot;票房&amp;quot; + 0.004*&amp;quot;拍摄&amp;quot; + 0.004*&amp;quot;娱乐&amp;quot;&#39;),
 (5,
  &#39;0.018*&amp;quot;学生&amp;quot; + 0.015*&amp;quot;留学&amp;quot; + 0.008*&amp;quot;大学&amp;quot; + 0.008*&amp;quot;可以&amp;quot; + 0.006*&amp;quot;功能&amp;quot; + 0.006*&amp;quot;像素&amp;quot; + 0.006*&amp;quot;拍摄&amp;quot; + 0.006*&amp;quot;采用&amp;quot; + 0.005*&amp;quot;学校&amp;quot; + 0.005*&amp;quot;申请&amp;quot;&#39;),
 (6,
  &#39;0.007*&amp;quot;玩家&amp;quot; + 0.006*&amp;quot;封神&amp;quot; + 0.006*&amp;quot;手机&amp;quot; + 0.006*&amp;quot;online&amp;quot; + 0.006*&amp;quot;the&amp;quot; + 0.006*&amp;quot;游戏&amp;quot; + 0.005*&amp;quot;陈水扁&amp;quot; + 0.005*&amp;quot;活动&amp;quot; + 0.005*&amp;quot;to&amp;quot; + 0.005*&amp;quot;一个&amp;quot;&#39;),
 (7,
  &#39;0.009*&amp;quot;信息&amp;quot; + 0.009*&amp;quot;考试&amp;quot; + 0.009*&amp;quot;游戏&amp;quot; + 0.007*&amp;quot;工作&amp;quot; + 0.007*&amp;quot;手机&amp;quot; + 0.006*&amp;quot;四六级&amp;quot; + 0.006*&amp;quot;考生&amp;quot; + 0.005*&amp;quot;发展&amp;quot; + 0.004*&amp;quot;可以&amp;quot; + 0.004*&amp;quot;霸王&amp;quot;&#39;),
 (8,
  &#39;0.015*&amp;quot;我们&amp;quot; + 0.011*&amp;quot;企业&amp;quot; + 0.011*&amp;quot;产品&amp;quot; + 0.010*&amp;quot;市场&amp;quot; + 0.009*&amp;quot;家具&amp;quot; + 0.009*&amp;quot;品牌&amp;quot; + 0.008*&amp;quot;消费者&amp;quot; + 0.007*&amp;quot;行业&amp;quot; + 0.007*&amp;quot;中国&amp;quot; + 0.007*&amp;quot;一个&amp;quot;&#39;),
 (9,
  &#39;0.012*&amp;quot;游戏&amp;quot; + 0.011*&amp;quot;玩家&amp;quot; + 0.010*&amp;quot;可以&amp;quot; + 0.008*&amp;quot;搭配&amp;quot; + 0.008*&amp;quot;活动&amp;quot; + 0.006*&amp;quot;时尚&amp;quot; + 0.005*&amp;quot;OL&amp;quot; + 0.004*&amp;quot;获得&amp;quot; + 0.004*&amp;quot;任务&amp;quot; + 0.004*&amp;quot;手机&amp;quot;&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根据上面的 &lt;code&gt;话题n&lt;/code&gt; 与 &lt;code&gt;特征词&lt;/code&gt; 大致可以解读每个 &lt;code&gt;话题n&lt;/code&gt; 是什么内容的话题。&lt;/p&gt;
&lt;h2 id=&#34;44-话题分布情况&#34;&gt;4.4 话题分布情况&lt;/h2&gt;
&lt;p&gt;现在我们想知道数据集中不同 &lt;code&gt;话题n&lt;/code&gt; 的分布情况&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.topic_distribution(raw_documents=df[&#39;content&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;9    1670
1    1443
0    1318
5    1265
4    1015
2     970
8     911
3     865
7     307
6     236
Name: topic, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们的数据有10类，每类是1000条。而现在LDA话题模型单纯的根据文本的一些线索，按照n_topics=10给我们分出的效果还不错。&lt;/p&gt;
&lt;p&gt;最完美的情况是每个 &lt;code&gt;话题n&lt;/code&gt; 都是接近1000, 现在 &lt;code&gt;话题9&lt;/code&gt;太多， &lt;code&gt;话题6、 话题7&lt;/code&gt;太少。&lt;/p&gt;
&lt;p&gt;不过我们也要注意到某些话题可能存在交集，容易分错，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;财经、房产、时政&lt;/li&gt;
&lt;li&gt;体育娱乐&lt;/li&gt;
&lt;li&gt;财经、科技&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等&lt;/p&gt;
&lt;p&gt;综上，目前模型还算可以，表现还能接受。&lt;/p&gt;
&lt;h2 id=&#34;45-可视化功能不稳定&#34;&gt;4.5 可视化（功能不稳定）&lt;/h2&gt;
&lt;p&gt;现在只有10个话题， 我们用肉眼看还能接受，但是当话题数太多的时，还是借助可视化工具帮助我们科学评判训练结果。&lt;/p&gt;
&lt;p&gt;这就用到topic.visualize_lda()，&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.visualize_lda()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行结束后在&lt;/p&gt;
&lt;p&gt;&lt;code&gt;代码所在的文件夹output文件夹中找vis.html文件，右键浏览器打开&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可视化功能不稳定，存在vis.html打不开的情况；希望海涵&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/vis.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中有左右两大区域&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左侧  话题分布情况，圆形越大话题越多，圆形四散在四个象限&lt;/li&gt;
&lt;li&gt;右侧  某话题对应的特征词，从上到下权重越来越低&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是左侧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量圆形均匀分布在四个象限比较好，如果圆形全部集中到有限的区域，模型训练不好&lt;/li&gt;
&lt;li&gt;圆形与圆形交集较少比较好，如果交集太多，说明n_topics设置的太大，应该设置的再小一些&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;五存储与导入lda模型&#34;&gt;五、存储与导入lda模型&lt;/h1&gt;
&lt;p&gt;lda话题模型训练特别慢，如果不保存训练好的模型，实际上是在浪费我们的生命和电脑计算力。&lt;/p&gt;
&lt;p&gt;好消息是cntopic默认为大家存储模型，存储地址是output文件夹内，大家只需要知道如何导入模型即可。&lt;/p&gt;
&lt;p&gt;这里需要导入的有两个模型，使用步骤&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;模型&lt;/th&gt;
&lt;th&gt;代码&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;准备documents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;topic = Topic(cwd=os.getcwd())&lt;/td&gt;
&lt;td&gt;初始化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;词典&lt;/td&gt;
&lt;td&gt;topic.load_dictionary(dictpath=&#39;output/dictionary.dict&amp;rsquo;)&lt;/td&gt;
&lt;td&gt;直接导入词典，省略topic.create_dictionary()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;topic.create_corpus(documents=documents)&lt;/td&gt;
&lt;td&gt;构建语料(将文本转为文档-词频矩阵)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;lda话题模型&lt;/td&gt;
&lt;td&gt;topic.load_lda_model(modelpath=&#39;output/model/lda.model&amp;rsquo;)&lt;/td&gt;
&lt;td&gt;导入lda话题模型， 相当于省略topic.train_lda_model(n_topics)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;现在我们试一试, 为了与之前的区分，这里我们起名topic2&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic2 = Topic(cwd=os.getcwd())
topic2.load_dictionary(dictpath=&#39;output/dictionary.dict&#39;)
topic2.create_corpus(documents=documents)
topic2.load_lda_model(modelpath=&#39;output/model/lda.model&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;大家可以自己回去试一试第4部分&lt;code&gt;使用LDA模型&lt;/code&gt;的相关功能&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;如果&#34;&gt;如果&lt;/h2&gt;
&lt;p&gt;如果您是经管人文社科专业背景，编程小白，面临海量文本数据采集和处理分析艰巨任务，个人建议学习
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;视频课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python入门&lt;/li&gt;
&lt;li&gt;网络爬虫&lt;/li&gt;
&lt;li&gt;数据读取&lt;/li&gt;
&lt;li&gt;文本分析入门&lt;/li&gt;
&lt;li&gt;机器学习与文本分析&lt;/li&gt;
&lt;li&gt;文本分析在经管研究中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感兴趣的童鞋不妨 戳一下
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;进来看看~&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://space.bilibili.com/122592901/channel/detail?cid=66008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;B站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公众号：大邓和他的python&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.zhihu.com/people/deng-xu-dong-hit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/thunderhit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>eventextraction: 快速构建不同领域(手机、汽车等)的情感词典</title>
      <link>https://thunderhit.github.io/post/eventextraction/</link>
      <pubDate>Tue, 02 Jun 2020 18:31:20 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/eventextraction/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#一文本事理类型分析&#34;&gt;一、文本事理类型分析&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#事件图谱事理图谱的类型&#34;&gt;事件图谱（事理图谱）的类型&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#二安装方法&#34;&gt;二、安装方法&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#三使用&#34;&gt;三、使用&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#31-主函数&#34;&gt;3.1 主函数&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#32-统计&#34;&gt;3.2 统计&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#如果&#34;&gt;如果&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#更多&#34;&gt;更多&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;一文本事理类型分析&#34;&gt;一、文本事理类型分析&lt;/h1&gt;
&lt;p&gt;中文复合事件抽取，可以用来识别文本的模式，包括条件事件、顺承事件、反转事件。&lt;/p&gt;
&lt;p&gt;我仅仅是对代码做了简单的修改，增加了函数说明注释和stats函数，可以用于统计文本中各种模式的分布(数量)情况。代码原作者为刘焕勇 &lt;a href=&#34;https://github.com/liuhuanyong&#34;&gt;https://github.com/liuhuanyong&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;事件图谱事理图谱的类型&#34;&gt;事件图谱（事理图谱）的类型&lt;/h3&gt;
&lt;p&gt;项目地址https://github.com/liuhuanyong/ComplexEventExtraction 项目介绍很详细，感兴趣的一定要去原项目看一下。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;事件&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;th&gt;形式化&lt;/th&gt;
&lt;th&gt;事件应用&lt;/th&gt;
&lt;th&gt;图谱场景&lt;/th&gt;
&lt;th&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;条件事件&lt;/td&gt;
&lt;td&gt;某事件条件下另一事件发生&lt;/td&gt;
&lt;td&gt;如果A那么B&lt;/td&gt;
&lt;td&gt;事件预警&lt;/td&gt;
&lt;td&gt;时机判定&lt;/td&gt;
&lt;td&gt;&amp;lt;限制放宽,立即增产&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反转事件&lt;/td&gt;
&lt;td&gt;某事件与另一事件形成对立&lt;/td&gt;
&lt;td&gt;虽然A但是B&lt;/td&gt;
&lt;td&gt;预防不测&lt;/td&gt;
&lt;td&gt;反面教材&lt;/td&gt;
&lt;td&gt;&amp;lt;起步晚,发展快&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;顺承事件&lt;/td&gt;
&lt;td&gt;某事件紧接着另一事件发生&lt;/td&gt;
&lt;td&gt;A接着B&lt;/td&gt;
&lt;td&gt;事件演化&lt;/td&gt;
&lt;td&gt;未来意图识别&lt;/td&gt;
&lt;td&gt;&amp;lt;去旅游,买火车票&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;分析出文本中的条件、顺承、反转，理论上就可以构建知识网络(本库做不到这可视化)。
1、反转事件图谱
&lt;img src=&#34;img/but.png&#34; alt=&#34;&#34;&gt;
2、条件事件图谱
&lt;img src=&#34;img/condition.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;二安装方法&#34;&gt;二、安装方法&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;pip install eventextraction
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h1 id=&#34;三使用&#34;&gt;三、使用&lt;/h1&gt;
&lt;h3 id=&#34;31-主函数&#34;&gt;3.1 主函数&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from eventextraction import EventsExtraction

extractor = EventsExtraction()
content = &#39;虽然你做了坏事，但我觉得你是好人。一旦时机成熟，就坚决推行&#39;
datas = extractor.extract_main(content)
print(datas)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[{&#39;sent&#39;: &#39;虽然你做了坏事，但我觉得你是好人&#39;, &#39;type&#39;: &#39;but&#39;, &#39;tuples&#39;: {&#39;pre_wd&#39;: &#39;虽然&#39;, &#39;pre_part&#39;: &#39;你做了坏事，&#39;, &#39;post_wd&#39;: &#39;但&#39;, &#39;post_part &#39;: &#39;我觉得你是好人&#39;}},
{&#39;sent&#39;: &#39;一旦时机成熟，就坚决推行&#39;, &#39;type&#39;: &#39;condition&#39;, &#39;tuples&#39;: {&#39;pre_wd&#39;: &#39;一旦&#39;, &#39;pre_part&#39;: &#39;时机成熟，&#39;, &#39;post_wd&#39;: &#39;就&#39;, &#39;post_part &#39;: &#39;坚决推行&#39;}}]

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;32-统计&#34;&gt;3.2 统计&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from eventextraction import EventsExtraction

extractor = EventsExtraction()
content = &#39;虽然你做了坏事，但我觉得你是好人。一旦时机成熟，就坚决推行&#39;
datas = extractor.extract_main(content)
print(extractor.stats(datas))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{&#39;but&#39;: 1, &#39;condition&#39;: 1, &#39;seq&#39;: 0, &#39;more&#39;: 0, &#39;other&#39;: 0}
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h2 id=&#34;如果&#34;&gt;如果&lt;/h2&gt;
&lt;p&gt;如果您是经管人文社科专业背景，编程小白，面临海量文本数据采集和处理分析艰巨任务，个人建议学习
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;视频课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python入门&lt;/li&gt;
&lt;li&gt;网络爬虫&lt;/li&gt;
&lt;li&gt;数据读取&lt;/li&gt;
&lt;li&gt;文本分析入门&lt;/li&gt;
&lt;li&gt;机器学习与文本分析&lt;/li&gt;
&lt;li&gt;文本分析在经管研究中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感兴趣的童鞋不妨 戳一下
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;进来看看~&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://space.bilibili.com/122592901/channel/detail?cid=66008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;B站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公众号：大邓和他的python&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.zhihu.com/people/deng-xu-dong-hit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[github](&lt;a href=&#34;https://github.com/thunderhit&#34;&gt;https://github.com/thunderhit&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pdfdocx: 用python读取pdf和docx文件数据</title>
      <link>https://thunderhit.github.io/post/pdfdocx/</link>
      <pubDate>Mon, 01 Jun 2020 20:31:20 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/pdfdocx/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#pdfdocx&#34;&gt;pdfdocx&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#github项目地址httpsgithubcomthunderhitpdfdocx&#34;&gt;&lt;a href=&#34;https://github.com/thunderhit/pdfdocx&#34;&gt;github项目地址&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#安装&#34;&gt;安装&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#使用&#34;&gt;使用&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#拆开pdfdocx&#34;&gt;拆开pdfdocx&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#如果&#34;&gt;如果&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#更多&#34;&gt;更多&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;最近运行课件代码，发现pdf文件读取部分的函数失效。这里找到读取pdf文件的可运行代码，为了方便后续学习使用，我已将pdf和docx读取方法封装成pdfdocx包。&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1 id=&#34;pdfdocx&#34;&gt;pdfdocx&lt;/h1&gt;
&lt;h3 id=&#34;github项目地址httpsgithubcomthunderhitpdfdocx&#34;&gt;
&lt;a href=&#34;https://github.com/thunderhit/pdfdocx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github项目地址&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;只有简单的两个读取函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;read_pdf(file)&lt;/li&gt;
&lt;li&gt;read_docx(file)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;file为文件路径，函数运行后返回file文件内的文本数据。&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pip install pdfdocx
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;
&lt;p&gt;读取pdf文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pdfdocx import read_pdf
p_text = read_pdf(&#39;test/data.pdf&#39;)
print(p_text)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这是来⾃pdf⽂件内的内容
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pdfdocx import read_docx
d_text = read_pdf(&#39;test/data.docx&#39;)
print(d_text)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这是来⾃docx⽂件内的内容
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;拆开pdfdocx&#34;&gt;拆开pdfdocx&lt;/h3&gt;
&lt;p&gt;希望大家能安装好，如果安装或者使用失败，可以使用下面的代码作为备选方法。虽然繁琐，能用就好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;读取pdf&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from io import StringIO
from pdfminer.converter import TextConverter
from pdfminer.layout import LAParams
from pdfminer.pdfdocument import PDFDocument
from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter
from pdfminer.pdfpage import PDFPage
from pdfminer.pdfparser import PDFParser
import re


def read_pdf(file):
    &amp;quot;&amp;quot;&amp;quot;
    读取pdf文件，并返回其中的文本内容
    :param file: pdf文件路径
    :return: docx中的文本内容
    &amp;quot;&amp;quot;&amp;quot;
    output_string = StringIO()
    with open(file, &#39;rb&#39;) as in_file:
        parser = PDFParser(in_file)
        doc = PDFDocument(parser)
        rsrcmgr = PDFResourceManager()
        device = TextConverter(rsrcmgr, output_string, laparams=LAParams())
        interpreter = PDFPageInterpreter(rsrcmgr, device)
        for page in PDFPage.create_pages(doc):
            interpreter.process_page(page)
    text = output_string.getvalue()
    return re.sub(&#39;[\n\t\s]&#39;, &#39;&#39;, text)
  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;读取docx&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import docx
  
def read_docx(file):
    &amp;quot;&amp;quot;&amp;quot;
    读取docx文件，并返回其中的文本内容
    :param file: docx文件路径
    :return: docx中的文本内容
    &amp;quot;&amp;quot;&amp;quot;
    text = &#39;&#39;
    doc = docx.Document(file)
    for para in doc.paragraphs:
        text += para.text
    return text
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;如果&#34;&gt;如果&lt;/h2&gt;
&lt;p&gt;如果您是经管人文社科专业背景，编程小白，面临海量文本数据采集和处理分析艰巨任务，个人建议学习
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;视频课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python入门&lt;/li&gt;
&lt;li&gt;网络爬虫&lt;/li&gt;
&lt;li&gt;数据读取&lt;/li&gt;
&lt;li&gt;文本分析入门&lt;/li&gt;
&lt;li&gt;机器学习与文本分析&lt;/li&gt;
&lt;li&gt;文本分析在经管研究中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感兴趣的童鞋不妨 戳一下
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;进来看看~&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://space.bilibili.com/122592901/channel/detail?cid=66008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;B站&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公众号：大邓和他的python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.zhihu.com/people/deng-xu-dong-hit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;知乎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/thunderhit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shreport: 批量下载上交所定期报告</title>
      <link>https://thunderhit.github.io/post/shreport/</link>
      <pubDate>Thu, 28 May 2020 20:31:20 +0800</pubDate>
      <guid>https://thunderhit.github.io/post/shreport/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#一简介&#34;&gt;一、简介&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#二安装&#34;&gt;二、安装&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#三功能说明&#34;&gt;三、功能说明&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#四快速入门&#34;&gt;四、快速入门&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#41--获取上证交易所上市公司目录&#34;&gt;4.1  获取上证交易所上市公司目录&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#42下载某公司所有定期报告文件&#34;&gt;4.2下载某公司所有定期报告文件&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#43-获取某公司的所有定期报告相关信息&#34;&gt;4.3 获取某公司的所有定期报告相关信息&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#44-获取某公司的所有定期报告url&#34;&gt;4.4 获取某公司的所有定期报告url&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#五获取cookies&#34;&gt;五、获取cookies&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#如果&#34;&gt;如果&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#更多&#34;&gt;更多&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;一简介&#34;&gt;一、简介&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;上海证券交易所上市公司定期报告下载,项目地址 https://github.com/thunderhit/shreport
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;github地址 &lt;a href=&#34;https://github.com/thunderhit/shreport&#34;&gt;https://github.com/thunderhit/shreport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pypi地址 &lt;a href=&#34;https://pypi.org/project/shreport&#34;&gt;https://pypi.org/project/shreport&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取上证交易所所有公司目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上市公司历年报告(季报、半年报、年报)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV15A411h7RJ&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二安装&#34;&gt;二、安装&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;pip install shreport
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三功能说明&#34;&gt;三、功能说明&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;companys()
  上证所有上市公司名录，公司名及股票代码
  :return: 返回DataFrame

pdfurls(code)
  仅获取定期报告pdf下载链接
  :param code:  股票代码
  :return: 年报pdf链接
  
disclosure(self, code)
   获得该公司的股票代码、报告类型、年份、定期报告披露日期、定期报告pdf下载链接, 返回DataFrame
  :param code:  股票代码
  
  
download(code, savepath)
  下载该公司（code）的所有季度报告、半年报、年报pdf文件
  :param code:  上市公司股票代码
  :param savepath:  数据存储所在文件夹的路径，建议使用相对路径
 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四快速入门&#34;&gt;四、快速入门&lt;/h2&gt;
&lt;p&gt;一定要先获得cookies后才能使用下面的所有代码，这里先直接看代码使用情况，cookies获取可见文档&lt;/p&gt;
&lt;h3 id=&#34;41--获取上证交易所上市公司目录&#34;&gt;4.1  获取上证交易所上市公司目录&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)
df = sh.companys()

#将查询结果存储
#df.to_excel(&#39;上证交易所上市公司名录.xlsx&#39;)

#显示前5条数据
df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;白云机场&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;东风汽车&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600006&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;中国国贸&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;首创股份&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600008&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;42下载某公司所有定期报告文件&#34;&gt;4.2下载某公司所有定期报告文件&lt;/h3&gt;
&lt;p&gt;绝大多数报告文件名格式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件&lt;/th&gt;
&lt;th&gt;文件名&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;季度报&lt;/td&gt;
&lt;td&gt;公司代码-年份-数字&lt;/td&gt;
&lt;td&gt;600000-2000-1.pdf、600000-2000-3.pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;半年报&lt;/td&gt;
&lt;td&gt;公司代码-年份-z&lt;/td&gt;
&lt;td&gt;600000-2000-z.pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;年报&lt;/td&gt;
&lt;td&gt;公司代码-年份-n&lt;/td&gt;
&lt;td&gt;600000-2000-n.pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pathlib import Path
from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)
#获取当前代码所在的文件夹路径
cwd = Path().cwd() 
#以浦发银行为例股票代码600000
sh.download(code=&#39;600000&#39;, savepath=cwd)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;=======请耐心等待，正在获取600000数据
=======准备获取600000年报文件链接========
=======年报文件链接已获取完毕=============
已成功下载600000_2000_1.pdf
已成功下载600000_2000_z.pdf
已成功下载600000_2000_3.pdf
已成功下载600000_2000_n.pdf
......
已成功下载600000_2019_1.pdf
已成功下载600000_2019_z.pdf
已成功下载600000_2019_3.pdf
已成功下载600000_2000_n.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;43-获取某公司的所有定期报告相关信息&#34;&gt;4.3 获取某公司的所有定期报告相关信息&lt;/h3&gt;
&lt;p&gt;如果暂时不想下载定期报告pdf文件，可以可以先获取某公司的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;股票代码&lt;/li&gt;
&lt;li&gt;报告类型&lt;/li&gt;
&lt;li&gt;年份&lt;/li&gt;
&lt;li&gt;定期报告披露日期&lt;/li&gt;
&lt;li&gt;定期报告pdf下载链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果返回DataFrame&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)


#获取浦发银行披露信息
df = sh.disclosure(code=&#39;600000&#39;)

#存储数据
#df.to_excel(&#39;600000.xlsx&#39;)

#前5条信息
df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;company&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;year&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;date&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;pdf&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;半年报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2000-07-28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2000_1.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2000_1.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;第三季度季报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-10-30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-10-30/600000_2002_3.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-10-30/600000_2002_3.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;半年报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-08-17&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-08-17/600000_2002_z.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-08-17/600000_2002_z.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;第一季度季报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-04-27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2002_1.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2002_1.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;年报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2001&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-03-21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2001_n.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2001_n.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;44-获取某公司的所有定期报告url&#34;&gt;4.4 获取某公司的所有定期报告url&lt;/h3&gt;
&lt;p&gt;如果暂时不想下载定期报告pdf文件，可以只得到该公司所有的报告文件链接&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)
#以浦发银行为例股票代码600000
urls = sh.pdfurls(code=&#39;600000&#39;)
urls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;=======准备获取600000年报文件链接========
=======年报文件链接已获取完毕=============
[&#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2000_1.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-10-30/600000_2002_3.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-08-17/600000_2002_z.pdf&#39;,
 .......
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2002_1.pdf&#39;,

 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2019-03-26/600000_2018_n.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-10-31/600000_2018_3.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-08-30/600000_2018_z.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-04-28/600000_2017_n.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-04-28/600000_2018_1.pdf&#39;]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;五获取cookies&#34;&gt;五、获取cookies&lt;/h2&gt;
&lt;p&gt;一定要先获得cookies后才能使用所有的代码，获取方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器访问http://www.sse.com.cn/disclosure/overview/&lt;/li&gt;
&lt;li&gt;按F12（mac按option+command+I)打开开发者工具的Network&lt;/li&gt;
&lt;li&gt;刷新网页，耐心寻找与www.sse.com.cn有关的任意网址，找到cookies&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;cookies.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;如果&#34;&gt;如果&lt;/h2&gt;
&lt;p&gt;如果您是经管人文社科专业背景，编程小白，面临海量文本数据采集和处理分析艰巨任务，个人建议学习
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;视频课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python入门&lt;/li&gt;
&lt;li&gt;网络爬虫&lt;/li&gt;
&lt;li&gt;数据读取&lt;/li&gt;
&lt;li&gt;文本分析入门&lt;/li&gt;
&lt;li&gt;机器学习与文本分析&lt;/li&gt;
&lt;li&gt;文本分析在经管研究中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感兴趣的童鞋不妨 戳一下
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;进来看看~&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://space.bilibili.com/122592901/channel/detail?cid=66008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;B站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公众号：大邓和他的python&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.zhihu.com/people/deng-xu-dong-hit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/thunderhit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cntopic:快速构建不同领域(手机、汽车等)的情感词典</title>
      <link>https://thunderhit.github.io/project/cntopic/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <guid>https://thunderhit.github.io/project/cntopic/</guid>
      <description>&lt;h1 id=&#34;cntopic&#34;&gt;cntopic&lt;/h1&gt;
&lt;p&gt;简单好用的lda话题模型，支持中英文。该库基于gensim和pyLDAvis，实现了lda话题模型及可视化功能。&lt;/p&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV1m54y1B7F9&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install cntopic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;这里给大家引入一个场景，假设大家采集新闻数据，忘记采集新闻文本对应的新闻类别，如果人工标注又很费工夫。这时候我们可以用lda话题模型帮我们洞察数据中的规律，发现新闻有n种话题群体。这样lda模型对数据自动打标注topic_1, topic_2, topic_3&amp;hellip; ,topic_n。&lt;/p&gt;
&lt;p&gt;我们研究者的工作量仅仅限于解读topic_1, topic_2, topic_3&amp;hellip; ,topic_n分别是什么话题即可。&lt;/p&gt;
&lt;p&gt;lda训练过程，大致分为&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取文件&lt;/li&gt;
&lt;li&gt;准备数据&lt;/li&gt;
&lt;li&gt;训练lda模型&lt;/li&gt;
&lt;li&gt;使用lda模型&lt;/li&gt;
&lt;li&gt;存储与导入lda模型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-读取文件&#34;&gt;1. 读取文件&lt;/h1&gt;
&lt;p&gt;这里我们用一个新闻数据,一共有10类，每类1000条数据，涵盖&lt;/p&gt;
&lt;p&gt;&amp;lsquo;时尚&amp;rsquo;, &amp;lsquo;财经&amp;rsquo;, &amp;lsquo;科技&amp;rsquo;, &amp;lsquo;教育&amp;rsquo;, &amp;lsquo;家居&amp;rsquo;, &amp;lsquo;体育&amp;rsquo;, &amp;lsquo;时政&amp;rsquo;, &amp;lsquo;游戏&amp;rsquo;, &amp;lsquo;房产&amp;rsquo;, &amp;lsquo;娱乐&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

df = pd.read_csv(&#39;chinese_news.csv&#39;)
df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;label&lt;/th&gt;
      &lt;th&gt;content&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;鲍勃库西奖归谁属？ NCAA最强控卫是坎巴还是弗神新浪体育讯如今，本赛季的NCAA进入到了末...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;麦基砍28+18+5却充满寂寞 纪录之夜他的痛阿联最懂新浪体育讯上天对每个人都是公平的，贾维...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;黄蜂vs湖人首发：科比冲击七连胜 火箭两旧将登场新浪体育讯北京时间3月28日，NBA常规赛洛...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;双面谢亚龙作秀终成做作 谁来为低劣行政能力埋单是谁任命了谢亚龙？谁放纵了谢亚龙？谁又该为谢亚...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;体育&lt;/td&gt;
      &lt;td&gt;兔年首战山西换帅后有虎胆 张学文用乔丹名言励志今晚客场挑战浙江稠州银行队，是山西汾酒男篮的兔...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;label标签的分布情况&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;label&#39;].value_counts()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;家居    1000
时尚    1000
房产    1000
时政    1000
教育    1000
游戏    1000
财经    1000
娱乐    1000
体育    1000
科技    1000
Name: label, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-准备数据&#34;&gt;2. 准备数据&lt;/h1&gt;
&lt;p&gt;一般准备数据包括:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分词、数据清洗&lt;/li&gt;
&lt;li&gt;按照模块需求整理数据的格式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意在scikit-learn中:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;英文文本不需要分词，原封不动传入即可。&lt;/li&gt;
&lt;li&gt;中文文本需要先分词，后整理为英文那样用空格间隔的字符串。形如”我 爱 中国“&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import jieba

def text2tokens(raw_text):
    #将文本raw_text分词后得到词语列表
    tokens = jieba.lcut(raw_text)
    #tokens = raw_text.lower().split(&#39; &#39;) #英文用空格分词即可
    tokens = [t for t in tokens if len(t)&amp;gt;1] #剔除单字
    return tokens

#对content列中所有的文本依次进行分词
documents = [text2tokens(txt) 
             for txt in df[&#39;content&#39;]]  

#显示前5个document
print(documents[:5])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[[&#39;鲍勃&#39;, &#39;库西&#39;, &#39;奖归&#39;, &#39;NCAA&#39;, &#39;最强&#39;, &#39;控卫&#39;, &#39;坎巴&#39;, &#39;还是&#39;, &#39;弗神&#39;, &#39;新浪&#39;, &#39;体育讯&#39;, &#39;称赞&#39;, &#39;得分&#39;, &#39;能力&#39;, &#39;毋庸置疑&#39;,...],
[&#39;球员&#39;, &#39;大东&#39;, &#39;赛区&#39;, &#39;锦标赛&#39;, &#39;全国&#39;, &#39;锦标赛&#39;, &#39;他场&#39;, &#39;27.1&#39;, &#39;6.1&#39;, &#39;篮板&#39;, &#39;5.1&#39;, &#39;助攻&#39;,..],
[&#39;依旧&#39;, &#39;如此&#39;, &#39;给力&#39;, &#39;疯狂&#39;, &#39;表现&#39;, &#39;开始&#39;, &#39;这个&#39;, &#39;赛季&#39;, &#39;疯狂&#39;, &#39;表现&#39;, &#39;结束&#39;, &#39;这个&#39;, &#39;赛季&#39;, &#39;我们&#39;, &#39;全国&#39;, &#39;锦标赛&#39;, &#39;前进&#39;, &#39;并且&#39;, &#39;之前&#39;, &#39;曾经&#39;, &#39;连赢&#39;, &#39;赢得&#39;, &#39;大东&#39;, ...],
[&#39;赛区&#39;, &#39;锦标赛&#39;, &#39;冠军&#39;, &#39;这些&#39;, &#39;归功于&#39;, &#39;坎巴&#39;, &#39;沃克&#39;, &#39;康涅狄格&#39;, &#39;大学&#39;, &#39;主教练&#39;, &#39;吉姆&#39;, &#39;卡洪&#39;, ...],
[&#39;称赞&#39;, &#39;一名&#39;, &#39;纯正&#39;, &#39;控卫&#39;, &#39;而且&#39;, &#39;能为&#39;, &#39;我们&#39;, &#39;得分&#39;, &#39;单场&#39;, &#39;42&#39;, &#39;有过&#39;, &#39;单场&#39;, &#39;17&#39;, &#39;助攻&#39;, ...]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-训练lda模型&#34;&gt;3. 训练lda模型&lt;/h1&gt;
&lt;p&gt;现在开始正式使用cntopic模块，开启LDA话题模型分析。步骤包括&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;代码&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;准备documents，已经在前面准备好了&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;初始化Topic类&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic = Topic(cwd=os.getcwd())&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;根据documents数据，构建词典空间&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.create_dictionary(documents=documents)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;构建语料(将文本转为文档-词频矩阵)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.create_corpus(documents=documents)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;指定n_topics，构建LDA话题模型&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.train_lda_model(n_topics)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里我们就按照n_topics=10构建lda话题模型，一般情况n_topics可能要实验多次，找到最佳的n_topics&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/test.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;运行过程中会在代码所在的文件夹内生成一个output文件夹，内部含有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dictionary.dict 词典文件&lt;/li&gt;
&lt;li&gt;lda.model.xxx 多个lda模型文件，其中xxx是代指&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;img/output.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/model.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述代码耗时较长，请耐心等待程序运行完毕~&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
from cntopic import Topic

topic = Topic(cwd=os.getcwd()) #构建词典dictionary
topic.create_dictionary(documents=documents) #根据documents数据，构建词典空间
topic.create_corpus(documents=documents) #构建语料(将文本转为文档-词频矩阵)
topic.train_lda_model(n_topics=10) #指定n_topics，构建LDA话题模型
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;gensim.models.ldamulticore.LdaMulticore at 0x158da5090&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-使用lda模型&#34;&gt;4. 使用LDA模型&lt;/h1&gt;
&lt;p&gt;上面的代码大概运行了5分钟，LDA模型已经训练好了。&lt;/p&gt;
&lt;p&gt;现在我们可以利用LDA做一些事情，包括&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Step&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;功能&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;代码&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;补充&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;分词后的某文档&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;document = [&amp;lsquo;游戏&amp;rsquo;, &amp;lsquo;体育&amp;rsquo;]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;预测document对应的话题&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.get_document_topics(document)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;显示每种话题与对应的特征词之间关系&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.show_topics()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;数据中不同话题分布情况&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.topic_distribution(raw_documents)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;raw_documents是列表或series，如本教程中的df[&amp;lsquo;content&amp;rsquo;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;可视化LDA话题模型（&lt;strong&gt;功能不稳定&lt;/strong&gt;）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;topic.visualize_lda()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;可视化结果在output中查找vis.html文件，浏览器打开即可&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;41-准备document&#34;&gt;4.1 准备document&lt;/h2&gt;
&lt;p&gt;假设有一个文档 &lt;code&gt;&#39;游戏体育真有意思&#39;&lt;/code&gt; 分词处理得到document&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;document = jieba.lcut(&#39;游戏体育真有意思&#39;)
document
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;游戏&#39;, &#39;体育&#39;, &#39;真&#39;, &#39;有意思&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;42-预测document对应的话题&#34;&gt;4.2 预测document对应的话题&lt;/h2&gt;
&lt;p&gt;我们使用topic模型，看看document对应的话题&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.get_document_topics(document)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(0, 0.02501536),
 (1, 0.025016038),
 (2, 0.28541195),
 (3, 0.025018401),
 (4, 0.025018891),
 (5, 0.025017735),
 (6, 0.51443774),
 (7, 0.02502284),
 (8, 0.025015472),
 (9, 0.025025582)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们的lda话题模型是按照n_topics=10训练的，限制调用topic预测某个document时，得到的结果是这10种话题及对应概率的元组列表。&lt;/p&gt;
&lt;p&gt;从中可以看到概率最大的是 &lt;code&gt;话题6&lt;/code&gt;， 概率有0.51443774。&lt;/p&gt;
&lt;p&gt;所以我们可以大致认为document是话题6&lt;/p&gt;
&lt;h2 id=&#34;43-显示每种话题与对应的特征词之间关系&#34;&gt;4.3 显示每种话题与对应的特征词之间关系&lt;/h2&gt;
&lt;p&gt;但是仅仅告诉每个文档是 &lt;code&gt;话题n&lt;/code&gt;，我们仍然不知道 &lt;code&gt;话题n&lt;/code&gt;代表的是什么，所以我们需要看看每种 &lt;code&gt;话题n&lt;/code&gt;对应的 &lt;code&gt;特征词语&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.show_topics()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[(0,
  &#39;0.042*&amp;quot;基金&amp;quot; + 0.013*&amp;quot;市场&amp;quot; + 0.011*&amp;quot;投资&amp;quot; + 0.009*&amp;quot;公司&amp;quot; + 0.005*&amp;quot;上涨&amp;quot; + 0.004*&amp;quot;股票&amp;quot; + 0.004*&amp;quot;房地产&amp;quot; + 0.004*&amp;quot;指数&amp;quot; + 0.004*&amp;quot;房价&amp;quot; + 0.004*&amp;quot;2008&amp;quot;&#39;),
 (1,
  &#39;0.010*&amp;quot;中国&amp;quot; + 0.007*&amp;quot;移民&amp;quot; + 0.006*&amp;quot;项目&amp;quot; + 0.005*&amp;quot;发展&amp;quot; + 0.005*&amp;quot;表示&amp;quot; + 0.005*&amp;quot;经济&amp;quot; + 0.005*&amp;quot;政府&amp;quot; + 0.005*&amp;quot;土地&amp;quot; + 0.004*&amp;quot;政策&amp;quot; + 0.004*&amp;quot;问题&amp;quot;&#39;),
 (2,
  &#39;0.014*&amp;quot;比赛&amp;quot; + 0.009*&amp;quot;他们&amp;quot; + 0.008*&amp;quot;球队&amp;quot; + 0.007*&amp;quot;篮板&amp;quot; + 0.006*&amp;quot;我们&amp;quot; + 0.005*&amp;quot;球员&amp;quot; + 0.005*&amp;quot;季后赛&amp;quot; + 0.005*&amp;quot;时间&amp;quot; + 0.005*&amp;quot;热火&amp;quot; + 0.005*&amp;quot;赛季&amp;quot;&#39;),
 (3,
  &#39;0.013*&amp;quot;我们&amp;quot; + 0.013*&amp;quot;一个&amp;quot; + 0.009*&amp;quot;自己&amp;quot; + 0.009*&amp;quot;这个&amp;quot; + 0.007*&amp;quot;没有&amp;quot; + 0.007*&amp;quot;他们&amp;quot; + 0.006*&amp;quot;可以&amp;quot; + 0.006*&amp;quot;就是&amp;quot; + 0.006*&amp;quot;很多&amp;quot; + 0.006*&amp;quot;记者&amp;quot;&#39;),
 (4,
  &#39;0.020*&amp;quot;电影&amp;quot; + 0.010*&amp;quot;导演&amp;quot; + 0.009*&amp;quot;微博&amp;quot; + 0.008*&amp;quot;影片&amp;quot; + 0.006*&amp;quot;观众&amp;quot; + 0.006*&amp;quot;一个&amp;quot; + 0.005*&amp;quot;自己&amp;quot; + 0.005*&amp;quot;票房&amp;quot; + 0.004*&amp;quot;拍摄&amp;quot; + 0.004*&amp;quot;娱乐&amp;quot;&#39;),
 (5,
  &#39;0.018*&amp;quot;学生&amp;quot; + 0.015*&amp;quot;留学&amp;quot; + 0.008*&amp;quot;大学&amp;quot; + 0.008*&amp;quot;可以&amp;quot; + 0.006*&amp;quot;功能&amp;quot; + 0.006*&amp;quot;像素&amp;quot; + 0.006*&amp;quot;拍摄&amp;quot; + 0.006*&amp;quot;采用&amp;quot; + 0.005*&amp;quot;学校&amp;quot; + 0.005*&amp;quot;申请&amp;quot;&#39;),
 (6,
  &#39;0.007*&amp;quot;玩家&amp;quot; + 0.006*&amp;quot;封神&amp;quot; + 0.006*&amp;quot;手机&amp;quot; + 0.006*&amp;quot;online&amp;quot; + 0.006*&amp;quot;the&amp;quot; + 0.006*&amp;quot;游戏&amp;quot; + 0.005*&amp;quot;陈水扁&amp;quot; + 0.005*&amp;quot;活动&amp;quot; + 0.005*&amp;quot;to&amp;quot; + 0.005*&amp;quot;一个&amp;quot;&#39;),
 (7,
  &#39;0.009*&amp;quot;信息&amp;quot; + 0.009*&amp;quot;考试&amp;quot; + 0.009*&amp;quot;游戏&amp;quot; + 0.007*&amp;quot;工作&amp;quot; + 0.007*&amp;quot;手机&amp;quot; + 0.006*&amp;quot;四六级&amp;quot; + 0.006*&amp;quot;考生&amp;quot; + 0.005*&amp;quot;发展&amp;quot; + 0.004*&amp;quot;可以&amp;quot; + 0.004*&amp;quot;霸王&amp;quot;&#39;),
 (8,
  &#39;0.015*&amp;quot;我们&amp;quot; + 0.011*&amp;quot;企业&amp;quot; + 0.011*&amp;quot;产品&amp;quot; + 0.010*&amp;quot;市场&amp;quot; + 0.009*&amp;quot;家具&amp;quot; + 0.009*&amp;quot;品牌&amp;quot; + 0.008*&amp;quot;消费者&amp;quot; + 0.007*&amp;quot;行业&amp;quot; + 0.007*&amp;quot;中国&amp;quot; + 0.007*&amp;quot;一个&amp;quot;&#39;),
 (9,
  &#39;0.012*&amp;quot;游戏&amp;quot; + 0.011*&amp;quot;玩家&amp;quot; + 0.010*&amp;quot;可以&amp;quot; + 0.008*&amp;quot;搭配&amp;quot; + 0.008*&amp;quot;活动&amp;quot; + 0.006*&amp;quot;时尚&amp;quot; + 0.005*&amp;quot;OL&amp;quot; + 0.004*&amp;quot;获得&amp;quot; + 0.004*&amp;quot;任务&amp;quot; + 0.004*&amp;quot;手机&amp;quot;&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根据上面的 &lt;code&gt;话题n&lt;/code&gt; 与 &lt;code&gt;特征词&lt;/code&gt; 大致可以解读每个 &lt;code&gt;话题n&lt;/code&gt; 是什么内容的话题。&lt;/p&gt;
&lt;h2 id=&#34;44-话题分布情况&#34;&gt;4.4 话题分布情况&lt;/h2&gt;
&lt;p&gt;现在我们想知道数据集中不同 &lt;code&gt;话题n&lt;/code&gt; 的分布情况&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.topic_distribution(raw_documents=df[&#39;content&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;9    1670
1    1443
0    1318
5    1265
4    1015
2     970
8     911
3     865
7     307
6     236
Name: topic, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们的数据有10类，每类是1000条。而现在LDA话题模型单纯的根据文本的一些线索，按照n_topics=10给我们分出的效果还不错。&lt;/p&gt;
&lt;p&gt;最完美的情况是每个 &lt;code&gt;话题n&lt;/code&gt; 都是接近1000, 现在 &lt;code&gt;话题9&lt;/code&gt;太多， &lt;code&gt;话题6、 话题7&lt;/code&gt;太少。&lt;/p&gt;
&lt;p&gt;不过我们也要注意到某些话题可能存在交集，容易分错，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;财经、房产、时政&lt;/li&gt;
&lt;li&gt;体育娱乐&lt;/li&gt;
&lt;li&gt;财经、科技&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等&lt;/p&gt;
&lt;p&gt;综上，目前模型还算可以，表现还能接受。&lt;/p&gt;
&lt;h2 id=&#34;45-可视化功能不稳定&#34;&gt;4.5 可视化（功能不稳定）&lt;/h2&gt;
&lt;p&gt;现在只有10个话题， 我们用肉眼看还能接受，但是当话题数太多的时，还是借助可视化工具帮助我们科学评判训练结果。&lt;/p&gt;
&lt;p&gt;这就用到topic.visualize_lda()，&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic.visualize_lda()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行结束后在&lt;/p&gt;
&lt;p&gt;&lt;code&gt;代码所在的文件夹output文件夹中找vis.html文件，右键浏览器打开&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可视化功能不稳定，存在vis.html打不开的情况；希望海涵&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/vis.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中有左右两大区域&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左侧  话题分布情况，圆形越大话题越多，圆形四散在四个象限&lt;/li&gt;
&lt;li&gt;右侧  某话题对应的特征词，从上到下权重越来越低&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是左侧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量圆形均匀分布在四个象限比较好，如果圆形全部集中到有限的区域，模型训练不好&lt;/li&gt;
&lt;li&gt;圆形与圆形交集较少比较好，如果交集太多，说明n_topics设置的太大，应该设置的再小一些&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;五存储与导入lda模型&#34;&gt;五、存储与导入lda模型&lt;/h1&gt;
&lt;p&gt;lda话题模型训练特别慢，如果不保存训练好的模型，实际上是在浪费我们的生命和电脑计算力。&lt;/p&gt;
&lt;p&gt;好消息是cntopic默认为大家存储模型，存储地址是output文件夹内，大家只需要知道如何导入模型即可。&lt;/p&gt;
&lt;p&gt;这里需要导入的有两个模型，使用步骤&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;模型&lt;/th&gt;
&lt;th&gt;代码&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;准备documents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;topic = Topic(cwd=os.getcwd())&lt;/td&gt;
&lt;td&gt;初始化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;词典&lt;/td&gt;
&lt;td&gt;topic.load_dictionary(dictpath=&#39;output/dictionary.dict&amp;rsquo;)&lt;/td&gt;
&lt;td&gt;直接导入词典，省略topic.create_dictionary()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;topic.create_corpus(documents=documents)&lt;/td&gt;
&lt;td&gt;构建语料(将文本转为文档-词频矩阵)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;lda话题模型&lt;/td&gt;
&lt;td&gt;topic.load_lda_model(modelpath=&#39;output/model/lda.model&amp;rsquo;)&lt;/td&gt;
&lt;td&gt;导入lda话题模型， 相当于省略topic.train_lda_model(n_topics)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;现在我们试一试, 为了与之前的区分，这里我们起名topic2&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;topic2 = Topic(cwd=os.getcwd())
topic2.load_dictionary(dictpath=&#39;output/dictionary.dict&#39;)
topic2.create_corpus(documents=documents)
topic2.load_lda_model(modelpath=&#39;output/model/lda.model&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;大家可以自己回去试一试第4部分&lt;code&gt;使用LDA模型&lt;/code&gt;的相关功能&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;如果&#34;&gt;如果&lt;/h2&gt;
&lt;p&gt;如果您是经管人文社科专业背景，编程小白，面临海量文本数据采集和处理分析艰巨任务，个人建议学习
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;视频课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python入门&lt;/li&gt;
&lt;li&gt;网络爬虫&lt;/li&gt;
&lt;li&gt;数据读取&lt;/li&gt;
&lt;li&gt;文本分析入门&lt;/li&gt;
&lt;li&gt;机器学习与文本分析&lt;/li&gt;
&lt;li&gt;文本分析在经管研究中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感兴趣的童鞋不妨 戳一下
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;进来看看~&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://space.bilibili.com/122592901/channel/detail?cid=66008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;B站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公众号：大邓和他的python&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.zhihu.com/people/deng-xu-dong-hit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/thunderhit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shreport库</title>
      <link>https://thunderhit.github.io/project/shreport/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      <guid>https://thunderhit.github.io/project/shreport/</guid>
      <description>&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#一简介&#34;&gt;一、简介&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#二安装&#34;&gt;二、安装&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#三功能说明&#34;&gt;三、功能说明&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#四快速入门&#34;&gt;四、快速入门&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#41--获取上证交易所上市公司目录&#34;&gt;4.1  获取上证交易所上市公司目录&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#42下载某公司所有定期报告文件&#34;&gt;4.2下载某公司所有定期报告文件&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#43-获取某公司的所有定期报告相关信息&#34;&gt;4.3 获取某公司的所有定期报告相关信息&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#44-获取某公司的所有定期报告url&#34;&gt;4.4 获取某公司的所有定期报告url&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#五获取cookies&#34;&gt;五、获取cookies&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#如果&#34;&gt;如果&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#更多&#34;&gt;更多&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#支持&#34;&gt;支持&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h2 id=&#34;一简介&#34;&gt;一、简介&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;上海证券交易所上市公司定期报告下载,项目地址 https://github.com/thunderhit/shreport
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;github地址 &lt;a href=&#34;https://github.com/thunderhit/shreport&#34;&gt;https://github.com/thunderhit/shreport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pypi地址 &lt;a href=&#34;https://pypi.org/project/shreport&#34;&gt;https://pypi.org/project/shreport&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取上证交易所所有公司目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上市公司历年报告(季报、半年报、年报)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;iframe
    src=&#34;//player.bilibili.com/player.html?bvid=BV15A411h7RJ&amp;page=1&#34;
    scrolling=&#34;no&#34;
    height=&#34;768px&#34;
    width=&#34;1024px&#34;
    frameborder=&#34;no&#34;
    framespacing=&#34;0&#34;
    allowfullscreen=&#34;true&#34;
&gt;
&lt;/iframe&gt;

&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二安装&#34;&gt;二、安装&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;pip install shreport
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三功能说明&#34;&gt;三、功能说明&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;companys()
  上证所有上市公司名录，公司名及股票代码
  :return: 返回DataFrame

pdfurls(code)
  仅获取定期报告pdf下载链接
  :param code:  股票代码
  :return: 年报pdf链接
  
disclosure(self, code)
   获得该公司的股票代码、报告类型、年份、定期报告披露日期、定期报告pdf下载链接, 返回DataFrame
  :param code:  股票代码
  
  
download(code, savepath)
  下载该公司（code）的所有季度报告、半年报、年报pdf文件
  :param code:  上市公司股票代码
  :param savepath:  数据存储所在文件夹的路径，建议使用相对路径
 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四快速入门&#34;&gt;四、快速入门&lt;/h2&gt;
&lt;p&gt;一定要先获得cookies后才能使用下面的所有代码，这里先直接看代码使用情况，cookies获取可见文档&lt;/p&gt;
&lt;h3 id=&#34;41--获取上证交易所上市公司目录&#34;&gt;4.1  获取上证交易所上市公司目录&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)
df = sh.companys()

#将查询结果存储
#df.to_excel(&#39;上证交易所上市公司名录.xlsx&#39;)

#显示前5条数据
df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;白云机场&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;东风汽车&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600006&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;中国国贸&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;首创股份&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600008&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;42下载某公司所有定期报告文件&#34;&gt;4.2下载某公司所有定期报告文件&lt;/h3&gt;
&lt;p&gt;绝大多数报告文件名格式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件&lt;/th&gt;
&lt;th&gt;文件名&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;季度报&lt;/td&gt;
&lt;td&gt;公司代码-年份-数字&lt;/td&gt;
&lt;td&gt;600000-2000-1.pdf、600000-2000-3.pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;半年报&lt;/td&gt;
&lt;td&gt;公司代码-年份-z&lt;/td&gt;
&lt;td&gt;600000-2000-z.pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;年报&lt;/td&gt;
&lt;td&gt;公司代码-年份-n&lt;/td&gt;
&lt;td&gt;600000-2000-n.pdf&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pathlib import Path
from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)
#获取当前代码所在的文件夹路径
cwd = Path().cwd() 
#以浦发银行为例股票代码600000
sh.download(code=&#39;600000&#39;, savepath=cwd)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;=======请耐心等待，正在获取600000数据
=======准备获取600000年报文件链接========
=======年报文件链接已获取完毕=============
已成功下载600000_2000_1.pdf
已成功下载600000_2000_z.pdf
已成功下载600000_2000_3.pdf
已成功下载600000_2000_n.pdf
......
已成功下载600000_2019_1.pdf
已成功下载600000_2019_z.pdf
已成功下载600000_2019_3.pdf
已成功下载600000_2000_n.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;43-获取某公司的所有定期报告相关信息&#34;&gt;4.3 获取某公司的所有定期报告相关信息&lt;/h3&gt;
&lt;p&gt;如果暂时不想下载定期报告pdf文件，可以可以先获取某公司的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;股票代码&lt;/li&gt;
&lt;li&gt;报告类型&lt;/li&gt;
&lt;li&gt;年份&lt;/li&gt;
&lt;li&gt;定期报告披露日期&lt;/li&gt;
&lt;li&gt;定期报告pdf下载链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果返回DataFrame&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)


#获取浦发银行披露信息
df = sh.disclosure(code=&#39;600000&#39;)

#存储数据
#df.to_excel(&#39;600000.xlsx&#39;)

#前5条信息
df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;company&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;year&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;date&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;pdf&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;半年报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2000-07-28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2000_1.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2000_1.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;第三季度季报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-10-30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-10-30/600000_2002_3.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-10-30/600000_2002_3.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;半年报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-08-17&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-08-17/600000_2002_z.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-08-17/600000_2002_z.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;第一季度季报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-04-27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2002_1.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2002_1.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;浦发银行&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;600000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;年报&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2001&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2002-03-21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2001_n.pdf&#34;&gt;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2001_n.pdf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;44-获取某公司的所有定期报告url&#34;&gt;4.4 获取某公司的所有定期报告url&lt;/h3&gt;
&lt;p&gt;如果暂时不想下载定期报告pdf文件，可以只得到该公司所有的报告文件链接&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from shreport import SH

cookies = {&amp;quot;Cookie&amp;quot;: &#39;您的cookies&#39;}
sh = SH(cookies)
#以浦发银行为例股票代码600000
urls = sh.pdfurls(code=&#39;600000&#39;)
urls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;=======准备获取600000年报文件链接========
=======年报文件链接已获取完毕=============
[&#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2000_1.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-10-30/600000_2002_3.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2002-08-17/600000_2002_z.pdf&#39;,
 .......
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/600000_2002_1.pdf&#39;,

 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2019-03-26/600000_2018_n.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-10-31/600000_2018_3.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-08-30/600000_2018_z.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-04-28/600000_2017_n.pdf&#39;,
 &#39;http://www.sse.com.cn/disclosure/listedinfo/announcement/c/2018-04-28/600000_2018_1.pdf&#39;]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;五获取cookies&#34;&gt;五、获取cookies&lt;/h2&gt;
&lt;p&gt;一定要先获得cookies后才能使用所有的代码，获取方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器访问http://www.sse.com.cn/disclosure/overview/&lt;/li&gt;
&lt;li&gt;按F12（mac按option+command+I)打开开发者工具的Network&lt;/li&gt;
&lt;li&gt;刷新网页，耐心寻找与www.sse.com.cn有关的任意网址，找到cookies&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;cookies.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;如果&#34;&gt;如果&lt;/h2&gt;
&lt;p&gt;如果您是经管人文社科专业背景，编程小白，面临海量文本数据采集和处理分析艰巨任务，个人建议学习
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;视频课。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python入门&lt;/li&gt;
&lt;li&gt;网络爬虫&lt;/li&gt;
&lt;li&gt;数据读取&lt;/li&gt;
&lt;li&gt;文本分析入门&lt;/li&gt;
&lt;li&gt;机器学习与文本分析&lt;/li&gt;
&lt;li&gt;文本分析在经管研究中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感兴趣的童鞋不妨 戳一下
&lt;a href=&#34;https://ke.qq.com/course/482241?tuin=163164df&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《python网络爬虫与文本数据分析》&lt;/a&gt;进来看看~&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://space.bilibili.com/122592901/channel/detail?cid=66008&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;B站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公众号：大邓和他的python&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.zhihu.com/people/deng-xu-dong-hit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/thunderhit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;p&gt;分享不易，谢谢大家分享（或红包）支持^_^&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../img/my_zanshang_qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
